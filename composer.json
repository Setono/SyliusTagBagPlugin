{
    "name": "setono/sylius-tag-bag-plugin",
    "type": "sylius-plugin",
    "keywords": ["sylius", "sylius-plugin"],
    "description": "Plugin that integrates Setono/TagBagBundle into your Sylius project",
    "license": "MIT",
    "require": {
        "php": "^7.2",

        "sylius/sylius": "^1.4.0",
        "setono/tag-bag-bundle": "^1.0"
    },
    "require-dev": {
        "phpspec/phpspec": "^6.2",
        "phpstan/phpstan-doctrine": "^0.10",
        "phpstan/phpstan-shim": "^0.10",
        "phpstan/phpstan-symfony": "^0.10",
        "phpstan/phpstan-webmozart-assert": "^0.10",
        "phpunit/phpunit": "^6.5",
        "roave/security-advisories": "dev-master",
        "sensiolabs/security-checker": "^5.0",
        "sylius-labs/coding-standard": "^2.0",
        "symfony/browser-kit": "^3.4|^4.1",
        "symfony/debug-bundle": "^3.4|^4.1",
        "symfony/dotenv": "^4.2",
        "symfony/intl": "^3.4|^4.1",
        "symfony/web-profiler-bundle": "^3.4|^4.1",
        "symfony/web-server-bundle": "^3.4|^4.1"
    },
    "conflict": {
        "symfony/symfony": "4.1.8",
        "symfony/browser-kit": "4.1.8",
        "symfony/dependency-injection": "4.1.8",
        "symfony/dom-crawler": "4.1.8",
        "symfony/routing": "4.1.8"
    },
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "Setono\\SyliusTagBagPlugin\\": "src/",
            "Tests\\Setono\\SyliusTagBagPlugin\\": "tests/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "AppBundle\\": "tests/Application/src/AppBundle/"
        }
    },
    "config": {
        "sort-packages": true
    },
    "scripts": {
        "try": [
            "@ensure-vendors-installed",
            "@assets",
            "@fixtures",
            "@run"
        ],
        "assets": [
            "@ensure-assets-installed",
            "@ensure-assets-compiled"
        ],
        "fixtures": [
            "@ensure-database-created",
            "@ensure-schema-updated",
            "(cd tests/Application && bin/console sylius:fixtures:load --no-interaction -e ${SYMFONY_ENV:-'dev'})"
        ],
        "run": [
            "@ensure-env-copied",
            "(cd tests/Application && bin/console server:run -d public -e ${SYMFONY_ENV:-'dev'})"
        ],
        "all": [
            "@checks"
        ],
        "checks": [
            "@check-style",
            "@analyse"
        ],
        "check-style": "./vendor/bin/ecs check src",
        "fix-style": "./vendor/bin/ecs check src --fix",
        "analyse": [
            "@ensure-test-container-exists",
            "./vendor/bin/phpstan.phar analyse -c phpstan.neon -l max src"
        ],
        "ensure-vendors-installed": "[[ -f vendor/autoload.php ]] || php -d memory_limit=-1 /usr/local/bin/composer install",
        "ensure-assets-installed": "[[ -d tests/Application/node_modules ]] || (cd tests/Application && yarn install)",
        "ensure-assets-compiled": "[[ -d tests/Application/public/assets ]] || (cd tests/Application && yarn build && composer ensure-env-copied && bin/console assets:install public -e ${SYMFONY_ENV:-'dev'})",
        "ensure-database-created": "composer ensure-env-copied && (cd tests/Application && bin/console doctrine:database:create --if-not-exists -e ${SYMFONY_ENV:-'dev'})",
        "ensure-schema-updated": "composer ensure-env-copied && (cd tests/Application && bin/console doctrine:schema:update --force -e ${SYMFONY_ENV:-'dev'})",
        "ensure-test-container-exists": "[[ -f tests/Application/var/cache/test/ApplicationTests_Setono_SyliusTagBagPlugin_Application_KernelTestDebugContainer.xml ]] || (cd tests/Application && php -d memory_limit=-1 bin/console cache:clear --env=test)",
        "ensure-env-copied": "([[ ${SYMFONY_ENV:-'dev'} == 'dev' ]] && composer ensure-env-dev-copied) || ([[ ${SYMFONY_ENV:-'dev'} == 'test' ]] && composer ensure-env-test-copied) || echo 'Unknown environment ${SYMFONY_ENV}'",
        "ensure-env-test-copied": "(cd tests/Application && ([[ -f .env.test.local ]] || cp .env.test .env.test.local))",
        "ensure-env-dev-copied":  "(cd tests/Application && ([[ -f .env.dev.local ]] || cp .env  .env.dev.local))"
    },
    "extra": {
        "branch-alias": {
            "dev-master": "1.0-dev"
        }
    }
}
